{"version":3,"sources":["components/Authentication/Login.js","components/Authentication/Signup.js","components/SingleChat.js","Pages/SingleBoardPage.js","Pages/Homepage.js","Context/AppProvider.js","components/miscellaneous/ProfileModal.js","components/ChatLoading.js","components/UserAvatar/UserListItem.js","config/ChatLogics.js","components/miscellaneous/PasswordChangeModal.js","components/miscellaneous/SideDrawer.js","components/UserAvatar/UserBadgeItem.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/UpdateGroupChatModal.js","components/ScrollableChat.js","components/ChatBox.js","Pages/Chatpage.js","components/miscellaneous/NoteModal.js","components/miscellaneous/BoardModal.js","components/miscellaneous/Note.js","components/miscellaneous/UpdateBoardModal.js","Pages/BoardPage.js","App.js","index.js"],"names":["Login","_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","loading","setLoading","toast","useToast","history","useHistory","submitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","localStorage","setItem","JSON","stringify","push","t0","description","message","stop","apply","arguments","_jsxs","VStack","spacing","children","FormControl","id","isRequired","_jsx","FormLabel","Input","placeholder","value","onChange","e","target","InputGroup","type","InputRightElement","width","Button","h","size","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","socket","selectedChatCompare","name","SetName","confirmpassword","setConfirmpassword","_useState9","_useState10","_useState11","_useState12","pic","setPic","_useState13","_useState14","handleClick","pushState","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","console","log","postDetails","files","Homepage","useEffect","parse","getItem","Container","maxW","centerContent","Box","display","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","color","Tabs","TabList","Tab","TabPanels","TabPanel","AppContext","createContext","useAppState","useContext","AppProvider","selectedChat","setSelectedChat","selectedBoard","setSelectedBoard","user","setUser","chats","setChats","boards","setBoards","notification","setNotification","isNoteModalOpen","setIsNoteModalOpen","userInfo","Provider","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_Fragment","IconButton","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","mr","ChatLoading","Stack","Skeleton","height","UserListItem","handleFunction","cursor","_hover","background","px","py","mb","Avatar","getSender","loggedUser","users","_id","isSameSender","messages","i","userId","length","sender","isLastMessage","isSameSenderMargin","isSameUser","PasswordChangeModal","onChangePassword","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","handlePasswordChange","_ref2","error","Authorization","concat","token","SideDrawer","search","setSearch","searchResult","setsearchResult","setloading","loadingChat","setLoadingChat","isPasswordModalOpen","onPasswordModalOpen","onPasswordModalClose","_useAppState","_useDisclosure2","isProfileModalOpen","onProfileModalClose","handleSearch","_yield$axios$get","get","accessChat","_callee2","_context2","find","c","_toConsumableArray","_x","Tooltip","label","hasArrow","placement","class","Menu","MenuButton","BellIcon","MenuList","pl","map","notif","MenuItem","chat","filer","n","isGroupChat","chatName","as","rightIcon","ChevronDownIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","pb","Spinner","ml","changePassword","UserBadgeItem","fontWeight","backgroundColor","CloseIcon","GroupChatModal","groupChatName","setGroupChatName","selectedUsers","setSelectedUsers","setSearchResult","query","handleSubmit","_ref3","u","flexWrap","delUser","filter","sel","slice","userToAdd","includes","MyChats","fetchAgain","setLoggedUser","fetchChats","lg","AddIcon","overflow","overflowY","UpdateGroupChatModal","setFetchAgain","fetchMessages","renameLoading","setRenameLoading","handleRemove","user1","_yield$axios$put","groupAdmin","put","chatId","handleAddUser","_yield$axios$put2","_x2","handleRename","_ref4","_callee3","_yield$axios$put3","_context3","_ref5","_callee4","_context4","_x3","ScrollableChat","ScrollableFeed","mt","padding","maxWidth","marginLeft","content","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","isTyping","setIsTyping","SetNotification","emit","io","on","newMessageRecieved","sendMessage","event","key","ArrowBackIcon","toUpperCase","alignSelf","margin","className","onKeyDown","lastTypingTime","Date","getTime","setTimeout","ChatBox","Chatpage","NoteModal","onCreateNote","boardId","setTitle","setContent","Textarea","trim","BoardModal","boardName","setBoardName","createBoard","_useAppState2","formattedUsers","errorMessage","Note","createdAt","updatedAt","onEdit","onRemove","onDragStop","xpos","ypos","setSelectedColor","handleColorChange","saveColorToServer","Draggable","x","y","onStop","boxShadow","transform","Flex","justify","Circle","borderColor","Badge","UpdateBoardModal","fetchNotes","boardAdmin","SingleBoardPage","notes","setNotes","editedNote","setEditedNote","_useState15","_useState16","isEditModalOpen","setIsEditModalOpen","_useState17","_useState18","_useState19","_useState20","closeEditModal","handleUpdateNote","prevNotes","note","_objectSpread","fetchBoardNotes","handleDragStop","newPosition","prevNote","board","updateData","closeNoteModal","createNote","noteData","_x4","handleRemoveNote","_callee5","noteId","_yield$axios$delete","_context5","delete","_x5","align","HStack","openEditModal","BoardPage","fetchBoards","Collapse","in","handleBoardClick","App","Route","path","component","exact","ReactDOM","render","ChakraProvider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.d48497e1.chunk.js","sourcesContent":["import { Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, VStack } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const [show, setShow] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => setShow(!show);\r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please fill all the fields\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/user/login\", { email, password }, config);\r\n\r\n      toast({\r\n        title: \"Login Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\">\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input placeholder=\"Enter Your Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup>\r\n          <Input type={show ? \"text\" : \"password\"} value={password} placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n\r\n      <Button colorScheme=\"blue\" width=\"100%\" style={{ marginTop: 15 }} onClick={submitHandler} isLoading={loading}>\r\n        Login\r\n      </Button>\r\n      <Button\r\n        variant=\"solid\"\r\n        colorScheme=\"red\"\r\n        width=\"100%\"\r\n        onClick={() => {\r\n          setEmail(\"guest@example.com\");\r\n          setPassword(\"123456\");\r\n        }}\r\n      >\r\n        Login as Guest\r\n      </Button>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  VStack,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Signup() {\r\n  const [show, setShow] = useState(false);\r\n  const [name, SetName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const postDetails = (pics) => {\r\n    setLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"chat-app\");\r\n      data.append(\"could_name\", \"dsunzcre7\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dsunzcre7/images/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!name || !email || !password || !confirmpassword) {\r\n      toast({\r\n        title: \"Please Fill all the Fields\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords do not match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/user\",\r\n        { name, email, password, pic },\r\n        config\r\n      );\r\n      toast({\r\n        title: \"Registration Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.pushState(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.data.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\">\r\n      <FormControl id=\"first-name\" isRequired>\r\n        <FormLabel>Name</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Name\"\r\n          onChange={(e) => SetName(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Confirm Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm Password\"\r\n            onChange={(e) => setConfirmpassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n\r\n      <FormControl>\r\n        <FormLabel>Upload your Picture</FormLabel>\r\n        <Input\r\n          type=\"file\"\r\n          p={1.5}\r\n          accept=\"image/*\"\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useAppState } from \"../Context/AppProvider\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport { IconButton } from \"@chakra-ui/button\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport { FormControl, Input, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"http://localhost:5000\";\r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState();\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  const toast = useToast();\r\n  const { user, selectedChat, setSelectedChat, notification, SetNotification } =\r\n    useAppState();\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to load the messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setTyping(false));\r\n  }, []);\r\n  useEffect(() => {\r\n    fetchMessages();\r\n    selectedChatCompare = selectedChat;\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare ||\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (notification.includes(newMessageRecieved)) {\r\n          SetNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n  });\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat._id,\r\n          },\r\n          config\r\n        );\r\n\r\n        socket.emit(\"new message\", data);\r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error occured!\",\r\n          description: \"Failed to send the message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 300;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            display=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              display={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {!selectedChat.isGroupChat ? (\r\n              <>\r\n                {getSender(user, selectedChat.users)}\r\n                <ProfileModal user={getSenderFull(user, selectedChat.users)} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                {selectedChat.chatName.toUpperCase()}\r\n                <UpdateGroupChatModal\r\n                  fetchAgain={fetchAgain}\r\n                  setFetchAgain={setFetchAgain}\r\n                  fetchMessages={fetchMessages}\r\n                />\r\n              </>\r\n            )}\r\n          </Text>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n\r\n            <FormControl onKeyDown={sendMessage} isRequired mt={3}>\r\n              {isTyping ? <div>...</div> : <>.</>}\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message..\"\r\n                onChange={typingHandler}\r\n                value={newMessage}\r\n              ></Input>\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          h=\"100%\"\r\n        >\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n","// SingleBoardPage.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Button,\r\n  Input,\r\n  VStack,\r\n  HStack,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"@chakra-ui/react\";\r\nimport Note from \"../components/miscellaneous/Note\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAppState } from \"../Context/AppProvider\";\r\nimport NoteModal from \"../components/miscellaneous/NoteModal\";\r\nimport UpdateBoardModal from \"../components/miscellaneous/UpdateBoardModal\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"http://localhost:5000\";\r\nvar socket, selectedBoardCompare;\r\n\r\nconst SingleBoardPage = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [editedNote, setEditedNote] = useState(null);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n  const [isNoteModalOpen, setIsNoteModalOpen] = useState(false);\r\n  const history = useHistory();\r\n  const { selectedBoard, setSelectedBoard, user } = useAppState();\r\n  const [editedNoteTitle, setEditedNoteTitle] = useState(\"\");\r\n  const [editedNoteContent, setEditedNoteContent] = useState(\"\");\r\n  const [editingNote, setEditingNote] = useState(null);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [selectedNote, setSelectedNote] = useState(null);\r\n  const { fetchAgain, setFetchAgain } = useAppState();\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n\r\n  const openEditModal = (note) => {\r\n    setEditedNote(note);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const closeEditModal = () => {\r\n    setEditedNote(null);\r\n    setIsEditModalOpen(false);\r\n  };\r\n\r\n  const handleUpdateNote = async (editedNote) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      console.log(editedNote);\r\n      const { data } = await axios.put(\r\n        `/api/note/${editedNote._id}`,\r\n        {\r\n          title: editedNote.title,\r\n          content: editedNote.content,\r\n        },\r\n        config\r\n      );\r\n      console.log(\"Server response:\", data);\r\n\r\n      setNotes((prevNotes) =>\r\n        prevNotes.map((note) =>\r\n          note.id === data._id ? { ...data, position: note.position } : note\r\n        )\r\n      );\r\n      socket.emit(\"new received\", data);\r\n      console.log(\"Note received event emitted\");\r\n      closeEditModal();\r\n      fetchBoardNotes();\r\n    } catch (error) {\r\n      console.error(\"Error updating note:\", error);\r\n    }\r\n  };\r\n  const handleDragStop = async (note, newPosition) => {\r\n    console.log(\"newposition: \", newPosition);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const updatedPosition = note.position || { x: 0, y: 0 };\r\n      const { data } = await axios.put(\r\n        `/api/note/${note._id}`,\r\n        {\r\n          position: newPosition,\r\n        },\r\n        config\r\n      );\r\n\r\n      setNotes((prevNotes) =>\r\n        prevNotes.map((prevNote) =>\r\n          prevNote._id === data._id\r\n            ? { ...prevNote, position: data.position }\r\n            : prevNote\r\n        )\r\n      );\r\n\r\n      fetchBoardNotes();\r\n\r\n      socket.emit(\r\n        \"new note\",\r\n        {\r\n          board: {\r\n            _id: selectedBoard._id,\r\n            users: selectedBoard.users,\r\n          },\r\n        },\r\n        data\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error updating note:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchBoardNotes = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/board/${selectedBoard._id}/notes`,\r\n        config\r\n      );\r\n\r\n      setNotes(data);\r\n      console.log(\"Fetched notes: \", data);\r\n      socket.emit(\"join board\", selectedBoard._id);\r\n    } catch (error) {\r\n      console.error(\"Error fetching board notes:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"update board\", (updateData) => {\r\n      console.log(\"Received update from server:\", updateData);\r\n      fetchBoardNotes(); // Make sure this function fetches the updated notes\r\n    });\r\n\r\n    console.log(\"Selected board:\", selectedBoard);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchBoardNotes();\r\n    selectedBoardCompare = selectedBoard;\r\n  }, [selectedBoard]);\r\n\r\n  const openNoteModal = () => {\r\n    setIsNoteModalOpen(true);\r\n  };\r\n\r\n  const closeNoteModal = () => {\r\n    setIsNoteModalOpen(false);\r\n  };\r\n\r\n  const createNote = async (noteData) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      console.log(noteData);\r\n      const { data } = await axios.post(\r\n        \"/api/note\",\r\n        {\r\n          title: noteData.title,\r\n          content: noteData.content,\r\n          boardId: noteData.boardId,\r\n          position: { x: 0, y: 0 },\r\n          color: \"yellow\",\r\n        },\r\n        config\r\n      );\r\n\r\n      console.log(\"New note created:\", data);\r\n\r\n      setNotes((prevNotes) => [...prevNotes, data]);\r\n\r\n      socket.emit(\"note received\", data);\r\n      console.log(\"Note received event emitted\");\r\n      closeNoteModal(); // Close the modal after creating the note\r\n    } catch (error) {\r\n      console.error(\"Error creating note:\", error);\r\n    }\r\n  };\r\n\r\n  const navigateToMyBoards = () => {\r\n    setSelectedBoard(null);\r\n    history.push(\"/boards\");\r\n  };\r\n\r\n  const handleRemoveNote = async (noteId) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.delete(`/api/note/${noteId}`, config);\r\n\r\n      setNotes((prevNotes) => prevNotes.filter((note) => note._id !== noteId));\r\n    } catch (error) {\r\n      console.error(\"Error removing note:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <Box p={6}>\r\n      {/* Heading section (you can add it later) */}\r\n      <VStack align=\"stretch\" spacing={4}>\r\n        <HStack justifyContent=\"space-between\">\r\n          <Button onClick={navigateToMyBoards}>Back to My Boards</Button>\r\n          <Text fontFamily=\"Work sans\" fontSize=\"2xl\" fontWeight=\"bold\">\r\n            {selectedBoard.boardName.toUpperCase()}\r\n          </Text>\r\n          <Button onClick={openNoteModal}>New note</Button>\r\n          <UpdateBoardModal></UpdateBoardModal>\r\n        </HStack>\r\n\r\n        {notes.length > 0 ? (\r\n          notes.map((note) => (\r\n            <Note\r\n              key={note._id}\r\n              id={note._id}\r\n              title={note.title}\r\n              content={note.content}\r\n              createdAt={note.createdAt}\r\n              updatedAt={note.updatedAt}\r\n              color={note.color}\r\n              xpos={note.position ? note.position.x : 0}\r\n              ypos={note.position ? note.position.y : 0}\r\n              onEdit={() => {\r\n                console.log(\"Editing note:\", note);\r\n                openEditModal(note);\r\n              }}\r\n              onRemove={() => handleRemoveNote(note._id)}\r\n              onDragStop={(event, data) => handleDragStop(note, data)}\r\n            />\r\n          ))\r\n        ) : (\r\n          <Text>No notes available for this board.</Text>\r\n        )}\r\n      </VStack>\r\n\r\n      <NoteModal\r\n        isOpen={isNoteModalOpen}\r\n        onClose={closeNoteModal}\r\n        onCreateNote={createNote}\r\n        boardId={selectedBoard._id}\r\n      />\r\n\r\n      <Modal isOpen={isEditModalOpen} onClose={closeEditModal}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Edit Note</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Text>Title</Text>\r\n            <Input\r\n              placeholder=\"New title...\"\r\n              value={editedNote?.title}\r\n              onChange={(e) =>\r\n                setEditedNote((prev) => ({ ...prev, title: e.target.value }))\r\n              }\r\n            />\r\n            <Text>Content</Text>\r\n            <Input\r\n              placeholder=\"New content...\"\r\n              value={editedNote?.content}\r\n              onChange={(e) =>\r\n                setEditedNote((prev) => ({ ...prev, content: e.target.value }))\r\n              }\r\n            />\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              colorScheme=\"blue\"\r\n              mr={3}\r\n              onClick={() => handleUpdateNote(editedNote)}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button onClick={closeEditModal}>Cancel</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SingleBoardPage;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Text,\r\n  TabList,\r\n  Tabs,\r\n  Tab,\r\n  TabPanel,\r\n  TabPanels,\r\n} from \"@chakra-ui/react\";\r\nimport Login from \"../components/Authentication/Login\";\r\nimport Signup from \"../components/Authentication/Signup\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Homepage = () => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (user) history.push(\"/chats\");\r\n  }, [history]);\r\n\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        p={3}\r\n        bg={\"white\"}\r\n        w=\"100%\"\r\n        m=\"40px 0 15px 0\"\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\" color=\"black\">\r\n          Chat App\r\n        </Text>\r\n      </Box>\r\n      <Box bg={\"white\"} width=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\r\n        <Tabs variant=\"soft-rounded\">\r\n          <TabList>\r\n            <Tab width=\"50%\">Login</Tab>\r\n            <Tab width=\"50%\">Sign Up</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Login />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Signup />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [selectedBoard, setSelectedBoard] = useState();\r\n  const [user, setUser] = useState();\r\n  const [chats, setChats] = useState([]);\r\n  const [boards, setBoards] = useState([]);\r\n  const [notification, setNotification] = useState([]);\r\n  const [isNoteModalOpen, setIsNoteModalOpen] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    setUser(userInfo);\r\n\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        user,\r\n        setUser,\r\n        selectedChat,\r\n        setSelectedChat,\r\n        selectedBoard,\r\n        setSelectedBoard,\r\n        chats,\r\n        setChats,\r\n        boards,\r\n        setBoards,\r\n        notification,\r\n        setNotification,\r\n        isNoteModalOpen,\r\n        setIsNoteModalOpen,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppState = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport default AppProvider;\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Image,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nconst ProfileModal = ({ user, children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  useEffect(() => {\r\n    console.log(\"passowrdchanemodal mounted\");\r\n    return () => {\r\n      console.log(\"PasswordChangeModal unmounted\");\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {children ? (\r\n        <span onClick={onOpen}>{children}</span>\r\n      ) : (\r\n        <IconButton\r\n          display={{ base: \"flex\" }}\r\n          icon={<ViewIcon />}\r\n          onClick={onOpen}\r\n        />\r\n      )}\r\n      <Modal size=\"lg\" isOpen={isOpen} onClose={onClose} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent h=\"410px\" bg=\"white\">\r\n          <ModalHeader\r\n            fontSize=\"40px\"\r\n            fontFamily=\"Work sans\"\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {user.name}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            display=\"flex\"\r\n            flexDir=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Image\r\n              borderRadius=\"full\"\r\n              boxSize=\"150px\"\r\n              src={user.pic}\r\n              alt={user.name}\r\n            />\r\n            <Text\r\n              fontSize={{ base: \"28px\", md: \"30px\" }}\r\n              fontFamily=\"Work sans\"\r\n            >\r\n              Email: {user.email}\r\n            </Text>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileModal;\r\n","import { Stack } from \"@chakra-ui/layout\";\r\nimport { Skeleton } from \"@chakra-ui/skeleton\";\r\nimport React from \"react\";\r\n\r\nexport const ChatLoading = () => {\r\n  return (\r\n    <Stack>\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n    </Stack>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Avatar, Box, Text } from \"@chakra-ui/react\";\r\n\r\nconst UserListItem = ({ user, handleFunction }) => {\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      cursor=\"pointer\"\r\n      bg=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#38B2AC\",\r\n        color: \"white\",\r\n      }}\r\n      w=\"100%\"\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Email : </b>\r\n          {user.email}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","export const getSender = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n};\r\nexport const getSenderFull = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1].sender._id !== m.sender._id ||\r\n      messages[i + 1].sender._id === undefined) &&\r\n    messages[i].sender._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  return (\r\n    i === messages.length - 1 &&\r\n    messages[messages.length - 1].sender._id !== userId &&\r\n    messages[messages.length - 1].sender._id\r\n  );\r\n};\r\n\r\nexport const isSameSenderMargin = (messages, m, i, userId) => {\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender._id === m.sender._id &&\r\n    messages[i].sender._id !== userId\r\n  )\r\n    return 33;\r\n  else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender._id !== m.sender._id &&\r\n      messages[i].sender._id !== userId) ||\r\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\r\n  )\r\n    return 0;\r\n  else return \"auto\";\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Input,\r\n  Button,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  ModalFooter,\r\n  useToast,\r\n} from \"@chakra-ui/react\"; // Replace with your actual UI library\r\nimport axios from \"axios\";\r\nimport { useAppState } from \"../../Context/AppProvider\";\r\n\r\nconst PasswordChangeModal = ({ isOpen, onClose, onChangePassword }) => {\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n  const { user } = useAppState();\r\n\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    console.log(\"PasswordChangeModal mounted\");\r\n    return () => {\r\n      console.log(\"PasswordChangeModal unmounted\");\r\n    };\r\n  }, []);\r\n\r\n  const handlePasswordChange = async () => {\r\n    // Perform validation and call the provided onChangePassword function\r\n    if (newPassword !== confirmNewPassword) {\r\n      // Handle password mismatch\r\n      console.error(\"New passwords do not match\");\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/user/password\",\r\n        {\r\n          currentPassword,\r\n          newPassword,\r\n        },\r\n        config\r\n      );\r\n\r\n      toast({\r\n        title: \"Password changed successfully\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n\r\n      onClose();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error changing passord\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n    }\r\n\r\n    // Call the parent component's function to handle the password change\r\n    onChangePassword(currentPassword, newPassword);\r\n\r\n    // Optionally, you can also clear the form fields and close the modal\r\n    setCurrentPassword(\"\");\r\n    setNewPassword(\"\");\r\n    setConfirmNewPassword(\"\");\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>Change Password</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"Current Password\"\r\n            value={currentPassword}\r\n            onChange={(e) => setCurrentPassword(e.target.value)}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"New Password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"Confirm New Password\"\r\n            value={confirmNewPassword}\r\n            onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n          />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button colorScheme=\"blue\" mr={3} onClick={handlePasswordChange}>\r\n            Change Password\r\n          </Button>\r\n          <Button onClick={onClose}>Cancel</Button>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PasswordChangeModal;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  Input,\r\n  Menu,\r\n  MenuButton,\r\n  MenuDivider,\r\n  MenuItem,\r\n  MenuList,\r\n  Text,\r\n  Tooltip,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useAppState } from \"../../Context/AppProvider\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport axios from \"axios\";\r\nimport { ChatLoading } from \"../ChatLoading\";\r\nimport UserListItem from \"../UserAvatar/UserListItem\";\r\nimport { getSender } from \"../../config/ChatLogics\";\r\nimport PasswordChangeModal from \"./PasswordChangeModal\";\r\n\r\nconst SideDrawer = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setsearchResult] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [loadingChat, setLoadingChat] = useState(false);\r\n  const {\r\n    isOpen: isPasswordModalOpen,\r\n    onOpen: onPasswordModalOpen,\r\n    onClose: onPasswordModalClose,\r\n  } = useDisclosure();\r\n\r\n  const {\r\n    user,\r\n    setSelectedChat,\r\n    chats,\r\n    setChats,\r\n    notification,\r\n    setNotification,\r\n  } = useAppState();\r\n  const history = useHistory();\r\n  const {\r\n    isOpen: isProfileModalOpen, // Separate useDisclosure for ProfileModal\r\n    onOpen: onProfileModalOpen,\r\n    onClose: onProfileModalClose,\r\n  } = useDisclosure();\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    history.push(\"/\");\r\n  };\r\n  const toast = useToast();\r\n\r\n  const handleSearch = async () => {\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please Enter something in search\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      setloading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      setloading(false);\r\n      setsearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to load the search results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const accessChat = async (userId) => {\r\n    try {\r\n      setLoadingChat(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/chat\", { userId }, config);\r\n      console.log(data);\r\n\r\n      if (!chats.find((c) => c._id === data._id)) {\r\n        setChats([data, ...chats]);\r\n      }\r\n\r\n      setSelectedChat(data);\r\n      setLoadingChat(false);\r\n      onProfileModalClose();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error fetching the chat\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p=\"5px 10px 5px 10px\"\r\n        borderWidth=\"5px\"\r\n      >\r\n        <Tooltip label=\"Search users to chat\" hasArrow placement=\"bottom-end\">\r\n          <Button variant=\"ghost\" onClick={isProfileModalOpen}>\r\n            <i class=\"fas fa-search\"></i>\r\n            <Text display={{ base: \"none\", md: \"flex\" }} px=\"4\">\r\n              Search User\r\n            </Text>\r\n          </Button>\r\n        </Tooltip>\r\n\r\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\r\n          Notes and chats\r\n        </Text>\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1}>\r\n              <BellIcon fontSize=\"2xl\" m={1} />\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No new messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setSelectedChat(notif.chat);\r\n                    setNotification(notification.filer((n) => n !== notif));\r\n                  }}\r\n                >\r\n                  {notif.chat.isGroupChat\r\n                    ? `New Message in ${notif.chat.chatName}`\r\n                    : `New message from ${getSender(user, notif.chat.users)}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\r\n              <Avatar\r\n                size=\"sm\"\r\n                cursor=\"pointer\"\r\n                name={user.name}\r\n                src={user.pic}\r\n              />\r\n            </MenuButton>\r\n            <MenuList>\r\n              <ProfileModal user={user}>\r\n                <MenuItem>My Profile</MenuItem>\r\n              </ProfileModal>\r\n              <MenuItem onClick={onPasswordModalOpen}>Change Password</MenuItem>\r\n              <MenuDivider />\r\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <Drawer\r\n        placement=\"left\"\r\n        onClose={onProfileModalClose}\r\n        isOpen={isProfileModalOpen}\r\n      >\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\r\n          <DrawerBody>\r\n            <Box display=\"flex\" pb={2}>\r\n              <Input\r\n                placeholder=\"Search by name or email\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <Button onClick={handleSearch}>Go</Button>\r\n            </Box>\r\n            {loading ? (\r\n              <ChatLoading />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => accessChat(user._id)}\r\n                />\r\n              ))\r\n            )}\r\n            {loadingChat && <Spinner ml=\"auto\" display=\"flex\" />}\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n      <PasswordChangeModal\r\n        isOpen={isPasswordModalOpen}\r\n        onClose={onPasswordModalClose}\r\n        onChangePassword={(currentPassword, newPassword) => {\r\n          if (user._id) {\r\n            user.changePassword(currentPassword, newPassword);\r\n            console.log(\"Password changed succesfully\");\r\n          } else {\r\n            console.error(\"User not found\");\r\n          }\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React from \"react\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport { CloseIcon } from \"@chakra-ui/icons\";\r\n\r\nconst UserBadgeItem = ({ user, handleFunction }) => {\r\n  return (\r\n    <Box\r\n      px={2}\r\n      py={1}\r\n      borderRadius=\"lg\"\r\n      m={1}\r\n      mb={2}\r\n      variant=\"solid\"\r\n      fontSize={12}\r\n      fontWeight=\"bold\"\r\n      backgroundColor=\"purple\"\r\n      color=\"white\"\r\n      cursor=\"pointer\"\r\n      onClick={handleFunction}\r\n    >\r\n      {user.name}\r\n      <CloseIcon pl={1}></CloseIcon>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserBadgeItem;\r\n","import { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, Button, useToast, Input, Box } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { useAppState } from \"../../Context/AppProvider\";\r\nimport { FormControl } from \"@chakra-ui/form-control\";\r\nimport axios from \"axios\";\r\nimport UserListItem from \"../UserAvatar/UserListItem\";\r\nimport UserBadgeItem from \"../UserAvatar/UserBadgeItem\";\r\n\r\nconst GroupChatModal = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n\r\n  const { user, chats, setChats } = useAppState();\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to load the search results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!groupChatName || !selectedUsers) {\r\n      toast({\r\n        title: \"Please fill all the fields\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/chat/group\",\r\n        {\r\n          name: groupChatName,\r\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\r\n        },\r\n        config\r\n      );\r\n\r\n      setChats([data, ...chats]);\r\n      onClose();\r\n      toast({\r\n        title: \"New group chat created\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Failed to create the chat!\",\r\n        description: error.data,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n  const handleDelete = (delUser) => {\r\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n  };\r\n\r\n  const handleGroup = (userToAdd) => {\r\n    if (selectedUsers.includes(userToAdd)) {\r\n      toast({\r\n        title: \"User already added\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSelectedUsers([...selectedUsers, userToAdd]);\r\n  };\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader fontSize=\"35px\" fontFamily=\"Work sans\" display=\"flex\" justifyContent=\"center\">\r\n            Create Group Chat\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody display=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <FormControl>\r\n              <Input placeholder=\"Chat Name\" mb={3} onChange={(e) => setGroupChatName(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input placeholder=\"Add Users eg: Basse, John\" mb={1} onChange={(e) => handleSearch(e.target.value)} />\r\n            </FormControl>\r\n            <Box w=\"100%\" display=\"flex\" flexWrap=\"wrap\">\r\n              {selectedUsers.map((u) => (\r\n                <UserBadgeItem key={user._id} user={u} handleFunction={() => handleDelete(u)} />\r\n              ))}\r\n            </Box>\r\n            {loading ? <div>loading</div> : searchResult?.slice(0, 4).map((user) => <UserListItem key={user._id} user={user} handleFunction={() => handleGroup(user)} />)}\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" onClick={handleSubmit}>\r\n              Create chat\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupChatModal;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAppState } from \"../Context/AppProvider\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport { ChatLoading } from \"./ChatLoading\";\r\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport axios from \"axios\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } =\r\n    useAppState();\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    console.log(user.id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      console.log(data);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error occured!\",\r\n        description: \"Failed to load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n      display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        display=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        <GroupChatModal>\r\n          <Button\r\n            display=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal>\r\n      </Box>\r\n\r\n      <Box\r\n        display=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflow=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useToast, Box, FormControl, Input } from \"@chakra-ui/react\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { ViewIcon } from \"@chakra-ui/icons\";\r\nimport { IconButton, Button } from \"@chakra-ui/button\";\r\nimport { useAppState } from \"../../Context/AppProvider\";\r\nimport UserBadgeItem from \"../UserAvatar/UserBadgeItem\";\r\nimport axios from \"axios\";\r\nimport UserListItem from \"../UserAvatar/UserListItem\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\n\r\nconst UpdateGroupChatModal = ({ fetchAgain, setFetchAgain, fetchMessages }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [renameLoading, setRenameLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n\r\n  const { selectedChat, setSelectedChat, user } = useAppState();\r\n\r\n  const handleRemove = async (user1) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user.id) {\r\n      toast({\r\n        title: \"Only admins can remove someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `api/chat/groupremove`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      user1._id === user.id ? setSelectedChat() : setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      fetchMessages();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error occured!\",\r\n        status: \"error\",\r\n        description: error.data.message,\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n  const handleAddUser = async (user1) => {\r\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\r\n      toast({\r\n        title: \"User Already in group!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selectedChat.groupAdmin._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can add someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        \"/api/chat/groupadd\",\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const handleRename = async () => {\r\n    if (!groupChatName) return;\r\n\r\n    try {\r\n      setRenameLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        \"/api/chat/rename\",\r\n        {\r\n          chatId: selectedChat._id,\r\n          chatName: groupChatName,\r\n        },\r\n        config\r\n      );\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setRenameLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setRenameLoading(false);\r\n    }\r\n\r\n    setGroupChatName(\"\");\r\n  };\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to load the search results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton display={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader fontSize=\"35px\" fontFamily=\"Work sans\" display=\"flex\" justifyContent=\"center\">\r\n            {selectedChat.chatName}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Box w=\"100%\" display=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n              {selectedChat.users.map((u) => (\r\n                <UserBadgeItem key={user._id} user={u} handleFunction={() => handleRemove(u)} />\r\n              ))}\r\n            </Box>\r\n            <FormControl display=\"flex\">\r\n              <Input placeholder=\"Chat name\" mb={3} value={groupChatName} onChange={(e) => setGroupChatName(e.target.value)} />\r\n              <Button variant=\"solid\" colorScheme=\"teal\" ml={1} isLoading={renameLoading} onClick={handleRename}>\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input placeholder=\"Add user to group\" mb={1} onChange={(e) => handleSearch(e.target.value)} />\r\n            </FormControl>\r\n            {loading ? <Spinner size=\"lg\" /> : searchResult?.map((user) => <UserListItem key={user._id} user={user} handleFunction={() => handleAddUser(user)} />)}\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n              Leave Group\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateGroupChatModal;\r\n","import React from \"react\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../config/ChatLogics\";\r\nimport { useAppState } from \"../Context/AppProvider\";\r\nimport { Avatar, Tooltip } from \"@chakra-ui/react\";\r\n\r\nconst ScrollableChat = ({ messages }) => {\r\n  const { user } = useAppState();\r\n\r\n  return (\r\n    <ScrollableFeed>\r\n      {messages &&\r\n        messages.map((m, i) => (\r\n          <div style={{ display: \"flex\" }} key={m._id}>\r\n            {(isSameSender(messages, m, i, user._id) ||\r\n              isLastMessage(messages, i, user._id)) && (\r\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                <Avatar\r\n                  mt=\"7px\"\r\n                  mr={1}\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={m.sender.name}\r\n                  src={m.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n              style={{\r\n                backgroundColor: `${\r\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                }`,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 15px\",\r\n                maxWidth: \"75%\",\r\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n              }}\r\n            >\r\n              {m.content}\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </ScrollableFeed>\r\n  );\r\n};\r\n\r\nexport default ScrollableChat;\r\n","import React from \"react\";\r\nimport { useAppState } from \"../Context/AppProvider\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport SingleChat from \"../components/SingleChat\";\r\n\r\nconst ChatBox = ({ fetchAgain, setFetchAgain }) => {\r\n  const { selectedChat } = useAppState();\r\n  return (\r\n    <Box\r\n      display={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\r\n      alignItems=\"center\"\r\n      flexDir=\"column\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"68%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useAppState } from \"../Context/AppProvider\";\r\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport MyChats from \"../components/MyChats\";\r\nimport ChatBox from \"../components/ChatBox\";\r\n\r\nconst Chatpage = () => {\r\n  const { user } = useAppState();\r\n  const [fetchAgain, setFetchAgain] = useState(false);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      {user && <SideDrawer />}\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        w=\"100%\"\r\n        h=\"91.5vh\"\r\n        p=\"10px\"\r\n      >\r\n        {user && <MyChats fetchAgain={fetchAgain} />}\r\n        {user && (\r\n          <ChatBox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatpage;\r\n","// NoteModal.js\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Textarea,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst NoteModal = ({ isOpen, onClose, onCreateNote, boardId }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const handleCreateNote = () => {\r\n    if (title.trim() === \"\" || content.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    onCreateNote({\r\n      title,\r\n      content,\r\n      boardId: boardId,\r\n    });\r\n\r\n    // Close the modal and reset input values\r\n    onClose();\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} size=\"md\">\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>Create a New Note</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          <Input\r\n            placeholder=\"Title\"\r\n            mb={4}\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n          <Textarea\r\n            placeholder=\"Content\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n          />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button colorScheme=\"teal\" onClick={handleCreateNote}>\r\n            Create Note\r\n          </Button>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NoteModal;\r\n","import { useState } from \"react\";\r\nimport { Box, Button, FormControl, Input, Modal, ModalBody, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useDisclosure, useToast } from \"@chakra-ui/react\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { useAppState } from \"../../Context/AppProvider\";\r\nimport axios from \"axios\";\r\nimport UserBadgeItem from \"../UserAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../UserAvatar/UserListItem\";\r\n\r\nconst BoardModal = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [boardName, setBoardName] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const { user, createBoard } = useAppState();\r\n  const [loading, setLoading] = useState(false);\r\n  const { boards, setBoards } = useAppState();\r\n\r\n  const toast = useToast();\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to load the search results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleDelete = (delUser) => {\r\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n  };\r\n\r\n  const handleGroup = (userToAdd) => {\r\n    if (selectedUsers.includes(userToAdd)) {\r\n      toast({\r\n        title: \"User already added\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSelectedUsers([...selectedUsers, userToAdd]);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!boardName || !selectedUsers) {\r\n      toast({\r\n        title: \"Please fill all the fields\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const formattedUsers = selectedUsers.map((u) => ({ _id: u }));\r\n\r\n    console.log(\"Data being sent:\", {\r\n      boardName,\r\n      users: formattedUsers,\r\n    });\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/board\",\r\n        {\r\n          boardName,\r\n          users: selectedUsers.map((u) => u._id),\r\n        },\r\n        config\r\n      );\r\n\r\n      setBoards([data, ...boards]);\r\n      onClose();\r\n      toast({\r\n        title: \"New board created\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    } catch (error) {\r\n      const errorMessage = error.data.message || \"Failed to create the board\";\r\n      toast({\r\n        title: \"Failed to create the board!\",\r\n        description: errorMessage,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button display=\"flex\" fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }} rightIcon={<AddIcon />} onClick={onOpen}>\r\n        New Board\r\n      </Button>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Create a New Board</ModalHeader>\r\n          <ModalBody display=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <FormControl>\r\n              <Input placeholder=\"Enter Board Name\" mb={3} onChange={(e) => setBoardName(e.target.value)} />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input placeholder=\"Add Users eg: Basse, John\" mb={1} onChange={(e) => handleSearch(e.target.value)} />\r\n            </FormControl>\r\n            <Box w=\"100%\" display=\"flex\" flexWrap=\"wrap\">\r\n              {selectedUsers.map((u) => (\r\n                <UserBadgeItem key={u._id} user={u} handleFunction={() => handleDelete(u)} />\r\n              ))}\r\n            </Box>\r\n            {loading ? <div>loading</div> : searchResult?.slice(0, 4).map((user) => <UserListItem key={user._id} user={user} handleFunction={() => handleGroup(user)} />)}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" onClick={handleSubmit}>\r\n              Create board\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BoardModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Badge,\r\n  Flex,\r\n  Button,\r\n  Circle,\r\n  position,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { CloseIcon } from \"@chakra-ui/icons\";\r\nimport Draggable from \"react-draggable\";\r\nimport axios from \"axios\";\r\nimport { useAppState } from \"../../Context/AppProvider\";\r\nconst Note = ({\r\n  id,\r\n  title,\r\n  content,\r\n  sender,\r\n  createdAt,\r\n  updatedAt,\r\n  onEdit,\r\n  onRemove,\r\n  onDragStop,\r\n  xpos,\r\n  ypos,\r\n  color,\r\n}) => {\r\n  const [selectedColor, setSelectedColor] = useState(\"yellow\");\r\n  const { user } = useAppState();\r\n\r\n  const toast = useToast();\r\n\r\n  const handleDragStop = (e, data) => {\r\n    const { x, y } = data;\r\n    console.log(x, y);\r\n    onDragStop(id, { x, y });\r\n  };\r\n\r\n  const handleColorChange = (color) => {\r\n    setSelectedColor(color);\r\n    console.log(color);\r\n    saveColorToServer(color);\r\n  };\r\n\r\n  const saveColorToServer = async (color) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      await axios.put(`/api/note/${id}`, { color }, config);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to save the color to the server\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {}, [position]);\r\n  return (\r\n    <Draggable position={{ x: xpos, y: ypos }} onStop={handleDragStop}>\r\n      <Box\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"20px\"\r\n        p={4}\r\n        width=\"300px\"\r\n        backgroundColor={color}\r\n        boxShadow=\"md\"\r\n        transform={`translate(${xpos}px, ${ypos}px)`}\r\n        _hover={{ transform: \"scale(1.02)\" }}\r\n      >\r\n        <Flex justify=\"space-between\">\r\n          <Circle\r\n            borderColor=\"black\"\r\n            borderWidth=\"4px\"\r\n            size=\"30px\"\r\n            bg=\"red.500\"\r\n            cursor=\"pointer\"\r\n            onClick={() => handleColorChange(\"red\")}\r\n          />\r\n          <Circle\r\n            borderColor=\"black\"\r\n            borderWidth=\"4px\"\r\n            size=\"30px\"\r\n            bg=\"green.500\"\r\n            cursor=\"pointer\"\r\n            onClick={() => handleColorChange(\"green\")}\r\n          />\r\n          <Circle\r\n            borderColor=\"black\"\r\n            borderWidth=\"4px\"\r\n            size=\"30px\"\r\n            bg=\"yellow.500\"\r\n            cursor=\"pointer\"\r\n            onClick={() => handleColorChange(\"yellow\")}\r\n          />\r\n\r\n          <Button\r\n            size=\"sm\"\r\n            colorScheme=\"red\"\r\n            borderColor=\"black\"\r\n            borderWidth=\"4px\"\r\n            onClick={onRemove}\r\n          >\r\n            <CloseIcon />\r\n          </Button>\r\n        </Flex>\r\n\r\n        <Text fontWeight=\"bold\" fontSize=\"2xl\" mb={2}>\r\n          {title}\r\n        </Text>\r\n        <Text fontSize=\"black\" color=\"black.600\" mb={4}>\r\n          {content}\r\n        </Text>\r\n        <Text></Text>\r\n        <Flex justify=\"space-between\">\r\n          <Badge colorScheme=\"teal\">{`Created: ${createdAt}`}</Badge>\r\n        </Flex>\r\n        <Badge colorScheme=\"teal\">{`Last updated:  ${updatedAt}`}</Badge>\r\n        <Button mt={1} onClick={onEdit}>\r\n          Edit\r\n        </Button>\r\n      </Box>\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  IconButton,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Spinner,\r\n  useDisclosure,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport UserBadgeItem from \"../UserAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../UserAvatar/UserListItem\";\r\nimport { useAppState } from \"../../Context/AppProvider\";\r\nimport axios from \"axios\";\r\n\r\nconst UpdateBoardModal = ({ fetchAgain, setFetchAgain, fetchNotes }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [boardName, setBoardName] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [renameLoading, setRenameLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n\r\n  const { selectedBoard, setSelectedBoard, user } = useAppState();\r\n  // FIX ERROR NOT DEFINED\r\n  const handleRemove = async (user1) => {\r\n    if (selectedBoard.boardAdmin._id !== user._id && user._id !== user.id) {\r\n      toast({\r\n        title: \"Only admins can remove someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/board/boardremove`,\r\n        {\r\n          boardId: selectedBoard._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      user1._id === user.id ? setSelectedBoard() : setSelectedBoard(data);\r\n      fetchNotes();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error occured!\",\r\n        status: \"error\",\r\n        description: error.data.message, // FIX ERROR.RESP NOT DEFINED\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n  // ADD ROUTE FOR RENAMING BOARD\r\n  const handleRename = async () => {\r\n    if (!boardName) return;\r\n\r\n    try {\r\n      setRenameLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        \"/api/board/rename\",\r\n        {\r\n          boardId: selectedBoard._id,\r\n          boardName: boardName,\r\n        },\r\n        config\r\n      );\r\n      setSelectedBoard(data);\r\n      setRenameLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setRenameLoading(false);\r\n    }\r\n\r\n    setBoardName(\"\");\r\n  };\r\n\r\n  // Working\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to load the search results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Working\r\n  const handleAddUser = async (user1) => {\r\n    if (selectedBoard.users.find((u) => u._id === user1._id)) {\r\n      toast({\r\n        title: \"User Already in group!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selectedBoard.boardAdmin._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can add someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        \"/api/board/boardadd\",\r\n        {\r\n          boardId: selectedBoard._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedBoard(data);\r\n      //setFetchAgain(!fetchAgain);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton display={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader fontSize=\"35px\" fontFamily=\"Work sans\" display=\"flex\" justifyContent=\"center\">\r\n            {selectedBoard.boardName}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Box w=\"100%\" display=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n              {selectedBoard.users.map((u) => (\r\n                <UserBadgeItem key={user._id} user={u} handleFunction={() => handleRemove(u)} />\r\n              ))}\r\n            </Box>\r\n            <FormControl display=\"flex\">\r\n              <Input placeholder=\"Chat name\" mb={3} value={boardName} onChange={(e) => setBoardName(e.target.value)} />\r\n              <Button variant=\"solid\" colorScheme=\"teal\" ml={1} isLoading={renameLoading} onClick={handleRename}>\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input placeholder=\"Add user to group\" mb={1} onChange={(e) => handleSearch(e.target.value)} />\r\n            </FormControl>\r\n            {loading ? <Spinner size=\"lg\" /> : searchResult?.map((user) => <UserListItem key={user._id} user={user} handleFunction={() => handleAddUser(user)} />)}\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n              Leave Group\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateBoardModal;\r\n","// BoardPage.js\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { useAppState } from \"../Context/AppProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Box, Button, Collapse, Stack, Text } from \"@chakra-ui/react\";\r\nimport { AddIcon, ChevronLeftIcon } from \"@chakra-ui/icons\";\r\nimport NoteModal from \"../components/miscellaneous/NoteModal\";\r\nimport BoardModal from \"../components/miscellaneous/BoardModal\";\r\nimport { ChatLoading } from \"../components/ChatLoading\";\r\nimport NotesDisplay from \"../components/NotesDisplay\";\r\nimport SingleBoardPage from \"./SingleBoardPage\";\r\n\r\nconst BoardPage = () => {\r\n  const { selectedBoard, setSelectedBoard, user, boards, setBoards } =\r\n    useAppState();\r\n  const history = useHistory();\r\n\r\n  const fetchBoards = async () => {\r\n    try {\r\n      if (!user || !user.token) {\r\n        console.error(\"user or token is undefined\");\r\n        return;\r\n      }\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/board\", config);\r\n      console.log(\"Boards data:\", data);\r\n      setBoards(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching boards:\", error);\r\n    }\r\n  };\r\n\r\n  const closeNewBoardModal = () => {};\r\n\r\n  useEffect(() => {\r\n    // Fetch boards when the component mounts\r\n    if (user && user.token) {\r\n      fetchBoards();\r\n    }\r\n  }, [user]); // Only run the effect when the user changes\r\n\r\n  const handleBoardClick = (board) => {\r\n    setSelectedBoard(board);\r\n    history.push(`/boards/${board._id}`);\r\n  };\r\n\r\n  const clearSelectedBoard = () => {\r\n    setSelectedBoard(null);\r\n    history.push(\"/boards\");\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      className=\"board-page\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w=\"100%\"\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      {/* Conditionally render SingleBoardPage if a board is selected */}\r\n      {selectedBoard ? (\r\n        <SingleBoardPage />\r\n      ) : (\r\n        <>\r\n          {/* My Boards section */}\r\n          <Collapse in={!selectedBoard}>\r\n            <Box\r\n              pb={3}\r\n              px={3}\r\n              fontSize={{ base: \"28px\", md: \"30px\" }}\r\n              fontFamily=\"Work sans\"\r\n              display=\"flex\"\r\n              w=\"100%\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              My Boards\r\n              <BoardModal onClose={closeNewBoardModal}>\r\n                <Button\r\n                  display=\"flex\"\r\n                  fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n                  rightIcon={<AddIcon />}\r\n                >\r\n                  New Board\r\n                </Button>\r\n              </BoardModal>\r\n            </Box>\r\n\r\n            <Stack overflowY=\"scroll\">\r\n              {boards ? (\r\n                boards.map((board) => (\r\n                  <Box\r\n                    onClick={() => handleBoardClick(board)}\r\n                    cursor=\"pointer\"\r\n                    bg={selectedBoard === board ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                    color={selectedBoard === board ? \"white\" : \"black\"}\r\n                    px={3}\r\n                    py={2}\r\n                    borderRadius=\"lg\"\r\n                    key={board._id}\r\n                  >\r\n                    <Text>{board.boardName}</Text>\r\n                  </Box>\r\n                ))\r\n              ) : (\r\n                <ChatLoading />\r\n              )}\r\n            </Stack>\r\n          </Collapse>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BoardPage;\r\n","import \"./App.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Homepage from \"./Pages/Homepage\";\r\nimport Chatpage from \"./Pages/Chatpage\";\r\nimport BoardPage from \"./Pages/BoardPage\";\r\nimport AppProvider from \"./Context/AppProvider\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppProvider>\r\n        <Route path=\"/\" component={Homepage} exact />\r\n        <Route path=\"/chats\" component={Chatpage} exact />\r\n        <Route path=\"/boards\" component={BoardPage} />\r\n      </AppProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport AppProvider from \"./Context/AppProvider\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <ChakraProvider>\r\n    <BrowserRouter>\r\n      <AppProvider>\r\n        <App />\r\n      </AppProvider>\r\n    </BrowserRouter>\r\n  </ChakraProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}